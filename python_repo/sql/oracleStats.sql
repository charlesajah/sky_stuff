SELECT '_datapoint:Generic Jenkins String:' || SYS_CONTEXT ( 'userenv' , 'instance_name' ) || '_hostname:' || SYS_CONTEXT ( 'userenv' , 'server_host' ) FROM DUAL
UNION ALL
select '_datapoint:database_wait_'||(replace(replace(wait_class,' ',null),'/',null))||':'||i.instance_name||'_'||(replace(replace(wait_class,' ',null),'/',null))||':' ||replace(replace(wait_class,' ',null),'/',null) ||'_' ||metric||':'|| nvl(v2.val,0) val from (select src.wait_class ,rgen.metric ,case rgen.metric when 'MAX_HOUR' then src.max_hour when 'AVG_HOUR' then src.avg_hour when 'CURRENT_VAL' then src.current_val when 'PCT_AVG_DEV' then src.pct_avg_dev else null end val from (select v.* , round(v.current_val/case when v.avg_hour=0 then null else v.avg_hour end *100,2)-100 pct_avg_dev from (select distinct t.wait_class ,round(avg(nvl(avg_active_sessions,0)) over (partition by wait_class)) avg_hour ,round(max(avg_active_sessions) over (partition by wait_class)) max_hour ,first_value(avg_active_sessions) over(partition by wait_class order by sample_time desc) current_val from (select sample_time ,wait_class ,avg_active_sessions from (select trunc(sample_time,'dd') + round(to_char(sample_time,'sssss.ff') / 60) / 1440 sample_time ,wait_class ,round(avg(active_sessions)) avg_active_sessions from (select sample_time ,nvl(wait_class,session_state) wait_class ,count(*) active_sessions from v$active_session_history where sample_time >= sysdate-1/24 group by sample_time ,nvl(wait_class,session_state) ) dt group by trunc(sample_time,'dd') + round(to_char(sample_time,'sssss.ff') / 60) / 1440 ,wait_class ) right join (select wait_class ,trunc(systimestamp,'dd') + round(to_char(systimestamp,'sssss.ff') / 60) / 1440-(1/24)+((lvl-0)/24/60) sample_time from (select distinct wait_class from v$event_name union all select 'ON CPU' from dual) ,(select level lvl from dual connect by level < 61) ) en partition by (wait_class) using (sample_time,wait_class) order by 1 desc ) t )v )src cross join (select case level when 1 then 'MAX_HOUR' when 2 then 'AVG_HOUR' when 3 then 'CURRENT_VAL' when 4 then 'PCT_AVG_DEV' end metric from dual connect by level <=4) rgen )v2, v$instance i union all select '_datapoint:database'||case when pool like '%PGA%' then '_memory_PGA' else '_memory_SGA' end ||':'||i.instance_name||case when pool like '%PGA%' then '_memory_PGA' else '_memory_SGA' end||':' ||pool ||'_' ||metric||':'|| nvl(to_char(v2.val),'NULL') from (select src.pool ,rgen.metric ,case rgen.metric when 'ALLOC' then src.alloc when 'FREE' then src.free else null end val from (select * from ( select decode(pool,null,name,pool) pool ,sum(bytes) alloc ,sum(decode(name,'free memory',bytes,null)) free from v$sgastat t group by decode(pool,null,name,pool) union all select name ,value ,null from v$pgastat where name= 'total PGA allocated') order by decode(pool,'buffer_cache',1,'shared pool',1,'total PGA allocated',1,0) desc, alloc desc) src cross join (select case level when 1 then 'ALLOC' when 2 then 'FREE' end metric from dual connect by level <=2) rgen order by decode(pool,'total PGA allocated',2,1),pool, metric) v2 ,v$instance i union all select '_datapoint:database_blockedsess:'||i.instance_name||'_blockedsess:' ||'Blocked_sessions' ||':'||v2.val from ( select count(*) val from dba_locks where blocking_others ='Blocking' ) v2 ,v$instance i union all select '_datapoint:database_processes:'||i.instance_name||'_processes'||val from ( select ':processes_curr:'|| count(*) val from v$process union all select ':processes_max:'|| value from v$parameter where name='processes') ,v$instance i union all select '_datapoint:database_sessions:'||i.instance_name||'_sessions'||val from ( select ':sessions_curr:'|| count(*) val from v$session union all select ':sessions_max:'|| value from v$parameter where name='sessions') ,v$instance i